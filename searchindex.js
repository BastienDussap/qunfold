Search.setIndex({"docnames": ["api", "developer-guide", "index", "modules", "qunfold", "qunfold.experiments", "qunfold.tests"], "filenames": ["api.md", "developer-guide.md", "index.md", "modules.rst", "qunfold.rst", "qunfold.experiments.rst", "qunfold.tests.rst"], "titles": ["API", "Developer guide", "Quickstart", "qunfold", "qunfold package", "qunfold.experiments package", "qunfold.tests package"], "terms": {"The": [0, 1, 4], "genericmethod": [0, 1, 3, 4], "defin": [0, 2], "interfac": 0, "mani": 0, "common": 0, "quantif": [0, 2, 4], "most": [0, 1], "importantli": 0, "thi": [0, 1, 2, 4], "consist": [0, 4], "fit": [0, 1, 2, 3, 4], "predict": [0, 2, 3, 4], "method": [0, 1, 3, 5], "instanc": [0, 1, 4], "ar": [0, 1, 4], "creat": [0, 1, 4], "through": [0, 4], "special": 0, "constructor": 0, "howev": 0, "you": [0, 1, 2, 4], "can": [0, 1, 4], "also": [0, 1], "your": [0, 1], "own": 0, "combin": 0, "an": [0, 2, 4], "arbitrari": [0, 4], "choic": 0, "class": [0, 1, 4, 5, 6], "qunfold": [0, 1, 2], "solver": [0, 4], "trust": [0, 4], "ncg": [0, 4], "solver_opt": [0, 4], "gtol": [0, 4], "1e": [0, 4], "08": [0, 4], "maxit": [0, 4], "1000": [0, 4, 6], "seed": [0, 4, 5], "none": [0, 4, 5, 6], "A": [0, 1, 4, 5], "gener": [0, 4], "repres": [0, 1, 4], "ani": [0, 1, 4], "function": [0, 1, 4, 5], "term": [0, 1, 4], "In": [0, 1, 4], "implement": [0, 2, 4], "i": [0, 1, 2, 4], "minim": [0, 4], "unconstrain": [0, 4], "second": [0, 4], "order": [0, 4], "valid": [0, 4], "probabl": [0, 1, 4], "estim": [0, 2, 4], "ensur": [0, 1, 4], "soft": [0, 1, 4], "max": [0, 1, 4], "trick": [0, 1, 4], "buns": [0, 4], "2022": [0, 4], "paramet": [0, 1, 4], "from": [0, 1, 2, 4], "option": [0, 4], "argument": [0, 4], "scipi": [0, 4], "optim": [0, 4], "default": [0, 4], "8": [0, 4], "random": [0, 4], "number": [0, 1, 4], "which": [0, 1, 4], "numpi": [0, 1, 4], "randomst": [0, 4], "x": [0, 1, 4, 6], "y": [0, 1, 4], "quantifi": [0, 2, 3, 4], "data": [0, 1, 2, 4], "matrix": [0, 1, 4], "label": [0, 1, 4], "return": [0, 1, 4], "itself": [0, 4], "preval": [0, 2, 4], "set": [0, 1, 4], "make": [0, 1, 4], "arrai": [0, 1, 4], "solv": [0, 3, 4], "q": [0, 1, 4], "m": [0, 1, 4, 6], "n": [0, 1, 4], "linear": [0, 4], "system": [0, 4], "equat": [0, 4], "p": [0, 1, 4, 6], "item": [0, 1, 4], "For": [0, 4], "some": [0, 4], "solut": [0, 4], "vector": [0, 1, 2, 4], "we": [0, 1], "categor": 0, "exist": [0, 1, 2], "well": [0, 4], "known": 0, "each": [0, 4], "fix": [0, 4], "acc": [0, 2, 3, 4], "fit_classifi": [0, 4], "true": [0, 2, 4, 5], "kwarg": [0, 4], "adjust": [0, 2, 4], "subclass": [0, 4], "instanti": [0, 4], "leastsquaresloss": [0, 3, 4], "classtransform": [0, 3, 4], "scikit": [0, 4], "learn": [0, 4], "whether": [0, 4], "when": [0, 4], "keyword": [0, 4], "accept": [0, 4], "pacc": [0, 3, 4], "probabilist": [0, 4], "hdx": [0, 3, 4], "n_bin": [0, 4], "helling": [0, 4], "distanc": [0, 4], "base": [0, 1, 4, 5, 6], "gonz\u00e1lez": [0, 4], "castro": [0, 4], "et": [0, 4], "al": [0, 4], "2013": [0, 4], "hellingerloss": [0, 3, 4], "histogramtransform": [0, 3, 4], "bin": [0, 1, 4], "hdy": [0, 3, 4], "latter": [0, 4], "us": [0, 1, 2, 4], "preprocessor": [0, 4], "run": [0, 1, 2, 3, 4], "tau": [0, 4], "0": [0, 4], "blobel": [0, 4], "1985": [0, 4], "tikhonovregular": [0, 3, 4], "blobelloss": [0, 3, 4], "strength": [0, 4], "readm": [0, 4], "comput": [0, 4], "sum": [0, 4], "squar": [0, 1, 4], "element": [0, 4], "wise": [0, 1, 4], "error": [0, 4, 5], "between": [0, 4], "model": [0, 4, 5], "likelihood": [0, 4], "under": [0, 4], "assumpt": [0, 4], "independ": [0, 4], "poisson": [0, 4], "rate": [0, 4], "averag": [0, 4], "histogram": [0, 4], "combinedloss": [0, 3, 4], "weight": [0, 4], "multipl": [0, 4], "ad": [0, 4], "togeth": [0, 4], "scale": [0, 4], "tikhonov": [0, 4], "propos": [0, 4], "promot": [0, 4], "smooth": [0, 4], "behavior": [0, 4], "often": [0, 4], "requir": [0, 1, 4], "ordin": [0, 4], "problem": [0, 4], "add": [0, 4], "equival": [0, 4], "1": [0, 2, 4, 5], "exampl": [0, 1, 4], "is_probabilist": [0, 4], "fals": [0, 4, 5], "classif": [0, 4], "either": [0, 4], "posterior": [0, 4], "crisp": [0, 4], "It": [0, 4], "cc": [0, 4], "pcc": [0, 4], "sld": [0, 4], "unit_scal": [0, 4], "anoth": [0, 4], "abstracttransform": [0, 1, 3, 4], "call": [0, 4], "befor": [0, 1, 2, 4], "output": [0, 1, 4], "one": [0, 4], "indic": [0, 4], "provid": [1, 4], "best": 1, "practic": 1, "regard": 1, "go": 1, "detail": 1, "about": [1, 4], "how": 1, "take": 1, "out": 1, "push": 1, "main": [1, 2, 4, 5], "branch": 1, "pleas": 1, "code": 1, "local": 1, "unittest": 1, "packag": [1, 2, 3], "python": [1, 2], "venv": 1, "pip": [1, 2], "instal": 1, "e": 1, "As": 1, "soon": 1, "github": [1, 2], "action": 1, "too": 1, "after": 1, "build": 1, "open": 1, "doc": 1, "html": 1, "index": 1, "browser": 1, "activ": 1, "cd": 1, "sphinx": 1, "apidoc": 1, "forc": [1, 2], "dir": 1, "sourc": 1, "gh": 1, "page": 1, "publish": 1, "result": [1, 3, 4], "http": [1, 2], "mirkobuns": [1, 2], "io": 1, "alreadi": [1, 4], "conveni": [1, 4], "wai": 1, "jax": [1, 2, 4], "power": 1, "loss_valu": [1, 4], "functionloss": [1, 3, 4], "object": [1, 4], "loss_funct": [1, 4], "like": [1, 4], "more": [1, 4], "than": [1, 4], "subtyp": [1, 4], "abstractloss": [1, 3, 4], "both": [1, 4], "case": [1, 4], "ha": [1, 4], "express": [1, 4], "auto": [1, 4], "differenti": [1, 4], "henc": [1, 4], "deriv": [1, 4], "have": [1, 2, 4], "manual": [1, 4], "easi": [1, 4], "just": [1, 4], "import": [1, 2, 4], "wrapper": [1, 4], "jnp": [1, 4], "would": [1, 4], "our": [1, 2, 4], "so": [1, 4], "don": [1, 4], "t": [1, 4], "worri": [1, 4], "constraint": [1, 4], "latent": [1, 4], "least": [1, 4], "simpli": [1, 4], "def": [1, 4], "least_squar": [1, 4], "dot": [1, 4], "therebi": [1, 4], "readi": [1, 4], "least_squares_loss": [1, 4], "If": [1, 2, 4], "freedom": 1, "sub": 1, "abstract": [1, 4], "regular": [1, 4], "_instanti": 1, "lambda": 1, "particular": 1, "should": 1, "where": 1, "To": [1, 2], "fit_transform": [1, 3, 4], "f": [1, 4], "must": [1, 4], "properti": [1, 4], "self": [1, 4], "n_class": [1, 4, 6], "unifi": 2, "framework": 2, "algorithm": 2, "unfold": [2, 4], "git": 2, "com": 2, "moreov": 2, "need": 2, "backend": 2, "typic": 2, "cpu": 2, "ideal": 2, "updat": [2, 4], "reinstal": 2, "dep": 2, "troubleshoot": 2, "start": 2, "23": 2, "2": 2, "setuptool": 2, "wheel": 2, "explicitli": 2, "receiv": 2, "nameerror": 2, "name": [2, 4], "execut": 2, "follow": 2, "command": 2, "upgrad": 2, "basic": 2, "classifi": [2, 4], "count": [2, 4], "sklearn": [2, 3], "ensembl": [2, 4], "randomforestclassifi": 2, "oob": 2, "train": [2, 4], "oob_scor": [2, 4], "x_trn": 2, "y_trn": 2, "p_hat": 2, "x_tst": 2, "subpackag": 3, "experi": [3, 4], "submodul": 3, "lequa": [3, 4], "modul": 3, "content": 3, "test": [3, 4], "loss": 3, "instantiate_loss": [3, 4], "derivativeerror": [3, 4], "quapi": [3, 5], "quapywrapp": [3, 4], "get_param": [3, 4], "set_param": [3, 4], "cvclassifi": [3, 4], "predict_proba": [3, 4], "transform": 3, "mygridsearchq": [4, 5], "trial": [4, 5], "singlesampleprotocol": [4, 6], "testcvclassifi": [4, 6], "test_method": [4, 6], "testhistogramtransform": [4, 6], "test_transform": [4, 6], "testmethod": [4, 6], "testquapywrapp": [4, 6], "generate_data": [4, 6], "make_problem": [4, 6], "abc": 4, "distribut": 4, "featur": 4, "dict": [4, 5], "fun": 4, "jac": 4, "hess": 4, "api": 4, "except": 4, "input_arrai": 4, "nit": 4, "messag": 4, "ndarrai": 4, "addit": 4, "generic_method": 4, "basequantifi": [4, 5], "thin": 4, "wrap": 4, "labelledcollect": 4, "deep": 4, "get": 4, "bool": 4, "contain": 4, "subobject": 4, "param": 4, "map": 4, "valu": 4, "type": [4, 5], "sampl": 4, "": 4, "np": 4, "shape": 4, "work": 4, "simpl": 4, "nest": 4, "pipelin": 4, "form": 4, "compon": 4, "__": 4, "possibl": 4, "n_estim": 4, "random_st": 4, "baseestim": 4, "classifiermixin": 4, "cross": 4, "fold": 4, "all": 4, "attribut": 4, "oob_decision_funct": 4, "bag": 4, "stratifi": 4, "param_grid": 5, "protocol": 5, "abstractprotocol": [5, 6], "callabl": 5, "str": 5, "mae": 5, "refit": 5, "timeout": 5, "n_job": 5, "verbos": 5, "gridsearchq": 5, "output_path": 5, "867": 5, "is_test_run": 5, "trial_config": 5, "trn_data": 5, "val_gen": 5, "tst_gen": 5, "n_trial": 5, "singl": 5, "methodnam": 6, "runtest": 6, "testcas": 6, "n_sampl": 6, "n_featur": 6}, "objects": {"": [[4, 0, 0, "-", "qunfold"]], "qunfold": [[0, 1, 1, "", "ACC"], [0, 1, 1, "", "BlobelLoss"], [0, 1, 1, "", "ClassTransformer"], [0, 1, 1, "", "CombinedLoss"], [0, 1, 1, "", "GenericMethod"], [0, 1, 1, "", "HDx"], [0, 1, 1, "", "HDy"], [0, 1, 1, "", "HellingerLoss"], [0, 1, 1, "", "HistogramTransformer"], [0, 1, 1, "", "LeastSquaresLoss"], [0, 1, 1, "", "PACC"], [0, 1, 1, "", "RUN"], [0, 1, 1, "", "TikhonovRegularization"], [0, 1, 1, "", "TikhonovRegularized"], [5, 0, 0, "-", "experiments"], [4, 0, 0, "-", "losses"], [4, 0, 0, "-", "methods"], [4, 0, 0, "-", "quapy"], [4, 0, 0, "-", "sklearn"], [6, 0, 0, "-", "tests"], [4, 0, 0, "-", "transformers"]], "qunfold.GenericMethod": [[0, 2, 1, "", "fit"], [0, 2, 1, "", "predict"], [0, 2, 1, "", "solve"]], "qunfold.experiments": [[5, 0, 0, "-", "lequa"]], "qunfold.experiments.lequa": [[5, 1, 1, "", "MyGridSearchQ"], [5, 3, 1, "", "main"], [5, 3, 1, "", "trial"]], "qunfold.losses": [[4, 1, 1, "", "AbstractLoss"], [4, 1, 1, "", "BlobelLoss"], [4, 1, 1, "", "CombinedLoss"], [4, 1, 1, "", "FunctionLoss"], [4, 1, 1, "", "HellingerLoss"], [4, 1, 1, "", "LeastSquaresLoss"], [4, 1, 1, "", "TikhonovRegularization"], [4, 1, 1, "", "TikhonovRegularized"], [4, 3, 1, "", "instantiate_loss"]], "qunfold.losses.AbstractLoss": [[1, 2, 1, "", "_instantiate"]], "qunfold.methods": [[4, 1, 1, "", "ACC"], [4, 4, 1, "", "DerivativeError"], [4, 1, 1, "", "GenericMethod"], [4, 1, 1, "", "HDx"], [4, 1, 1, "", "HDy"], [4, 1, 1, "", "PACC"], [4, 1, 1, "", "RUN"], [4, 1, 1, "", "Result"]], "qunfold.methods.GenericMethod": [[4, 2, 1, "", "fit"], [4, 2, 1, "", "predict"], [4, 2, 1, "", "solve"]], "qunfold.quapy": [[4, 1, 1, "", "QuaPyWrapper"]], "qunfold.quapy.QuaPyWrapper": [[4, 2, 1, "", "fit"], [4, 2, 1, "", "get_params"], [4, 2, 1, "", "quantify"], [4, 2, 1, "", "set_params"]], "qunfold.sklearn": [[4, 1, 1, "", "CVClassifier"]], "qunfold.sklearn.CVClassifier": [[4, 2, 1, "", "fit"], [4, 2, 1, "", "predict_proba"]], "qunfold.tests": [[6, 1, 1, "", "SingleSampleProtocol"], [6, 1, 1, "", "TestCVClassifier"], [6, 1, 1, "", "TestHistogramTransformer"], [6, 1, 1, "", "TestMethods"], [6, 1, 1, "", "TestQuaPyWrapper"], [6, 3, 1, "", "generate_data"], [6, 3, 1, "", "make_problem"]], "qunfold.tests.TestCVClassifier": [[6, 2, 1, "", "test_methods"]], "qunfold.tests.TestHistogramTransformer": [[6, 2, 1, "", "test_transformer"]], "qunfold.tests.TestMethods": [[6, 2, 1, "", "test_methods"]], "qunfold.tests.TestQuaPyWrapper": [[6, 2, 1, "", "test_methods"]], "qunfold.transformers": [[4, 1, 1, "", "AbstractTransformer"], [4, 1, 1, "", "ClassTransformer"], [4, 1, 1, "", "HistogramTransformer"]], "qunfold.transformers.AbstractTransformer": [[4, 2, 1, "", "fit_transform"], [4, 2, 1, "", "transform"]], "qunfold.transformers.ClassTransformer": [[4, 2, 1, "", "fit_transform"], [4, 2, 1, "", "transform"]], "qunfold.transformers.HistogramTransformer": [[4, 2, 1, "", "fit_transform"], [4, 2, 1, "", "transform"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "exception", "Python exception"]}, "titleterms": {"api": 0, "popular": 0, "algorithm": 0, "classifi": 0, "count": 0, "distribut": 0, "match": 0, "unfold": 0, "loss": [0, 1, 4], "regular": 0, "featur": [0, 1], "transform": [0, 1, 4], "develop": 1, "guid": 1, "workflow": 1, "unit": 1, "test": [1, 6], "document": 1, "custom": 1, "implement": 1, "quickstart": 2, "instal": 2, "usag": 2, "qunfold": [3, 4, 5, 6], "packag": [4, 5, 6], "subpackag": 4, "submodul": [4, 5], "modul": [4, 5, 6], "method": 4, "quapi": 4, "sklearn": 4, "content": [4, 5, 6], "experi": 5, "lequa": 5}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"API": [[0, "api"]], "Popular algorithms": [[0, "popular-algorithms"]], "Classify and count": [[0, "classify-and-count"]], "Distribution matching": [[0, "distribution-matching"]], "Unfolding": [[0, "unfolding"]], "Losses": [[0, "losses"], [1, "losses"]], "Regularizers": [[0, "regularizers"]], "Feature transformations": [[0, "feature-transformations"], [1, "feature-transformations"]], "Developer guide": [[1, "developer-guide"]], "Workflow": [[1, "workflow"]], "Unit testing": [[1, "unit-testing"]], "Documentation": [[1, "documentation"]], "Custom implementations": [[1, "custom-implementations"]], "Quickstart": [[2, "quickstart"]], "Installation": [[2, "installation"]], "Usage": [[2, "usage"]], "qunfold": [[3, "qunfold"]], "qunfold package": [[4, "qunfold-package"]], "Subpackages": [[4, "subpackages"]], "Submodules": [[4, "submodules"], [5, "submodules"]], "qunfold.losses module": [[4, "module-qunfold.losses"]], "qunfold.methods module": [[4, "module-qunfold.methods"]], "qunfold.quapy module": [[4, "module-qunfold.quapy"]], "qunfold.sklearn module": [[4, "module-qunfold.sklearn"]], "qunfold.transformers module": [[4, "module-qunfold.transformers"]], "Module contents": [[4, "module-qunfold"], [5, "module-qunfold.experiments"], [6, "module-qunfold.tests"]], "qunfold.experiments package": [[5, "qunfold-experiments-package"]], "qunfold.experiments.lequa module": [[5, "module-qunfold.experiments.lequa"]], "qunfold.tests package": [[6, "qunfold-tests-package"]]}, "indexentries": {"acc (class in qunfold)": [[0, "qunfold.ACC"]], "blobelloss (class in qunfold)": [[0, "qunfold.BlobelLoss"]], "classtransformer (class in qunfold)": [[0, "qunfold.ClassTransformer"]], "combinedloss (class in qunfold)": [[0, "qunfold.CombinedLoss"]], "genericmethod (class in qunfold)": [[0, "qunfold.GenericMethod"]], "hdx (class in qunfold)": [[0, "qunfold.HDx"]], "hdy (class in qunfold)": [[0, "qunfold.HDy"]], "hellingerloss (class in qunfold)": [[0, "qunfold.HellingerLoss"]], "histogramtransformer (class in qunfold)": [[0, "qunfold.HistogramTransformer"]], "leastsquaresloss (class in qunfold)": [[0, "qunfold.LeastSquaresLoss"]], "pacc (class in qunfold)": [[0, "qunfold.PACC"]], "run (class in qunfold)": [[0, "qunfold.RUN"]], "tikhonovregularization (class in qunfold)": [[0, "qunfold.TikhonovRegularization"]], "tikhonovregularized (class in qunfold)": [[0, "qunfold.TikhonovRegularized"]], "fit() (qunfold.genericmethod method)": [[0, "qunfold.GenericMethod.fit"]], "predict() (qunfold.genericmethod method)": [[0, "qunfold.GenericMethod.predict"]], "solve() (qunfold.genericmethod method)": [[0, "qunfold.GenericMethod.solve"]], "abstractloss (class in qunfold.losses)": [[1, "qunfold.losses.AbstractLoss"], [4, "qunfold.losses.AbstractLoss"]], "abstracttransformer (class in qunfold.transformers)": [[1, "qunfold.transformers.AbstractTransformer"], [4, "qunfold.transformers.AbstractTransformer"]], "functionloss (class in qunfold.losses)": [[1, "qunfold.losses.FunctionLoss"], [4, "qunfold.losses.FunctionLoss"]], "_instantiate() (qunfold.losses.abstractloss method)": [[1, "qunfold.losses.AbstractLoss._instantiate"]], "fit_transform() (qunfold.transformers.abstracttransformer method)": [[1, "qunfold.transformers.AbstractTransformer.fit_transform"], [4, "qunfold.transformers.AbstractTransformer.fit_transform"]], "transform() (qunfold.transformers.abstracttransformer method)": [[1, "qunfold.transformers.AbstractTransformer.transform"], [4, "qunfold.transformers.AbstractTransformer.transform"]], "acc (class in qunfold.methods)": [[4, "qunfold.methods.ACC"]], "blobelloss (class in qunfold.losses)": [[4, "qunfold.losses.BlobelLoss"]], "cvclassifier (class in qunfold.sklearn)": [[4, "qunfold.sklearn.CVClassifier"]], "classtransformer (class in qunfold.transformers)": [[4, "qunfold.transformers.ClassTransformer"]], "combinedloss (class in qunfold.losses)": [[4, "qunfold.losses.CombinedLoss"]], "derivativeerror": [[4, "qunfold.methods.DerivativeError"]], "genericmethod (class in qunfold.methods)": [[4, "qunfold.methods.GenericMethod"]], "hdx (class in qunfold.methods)": [[4, "qunfold.methods.HDx"]], "hdy (class in qunfold.methods)": [[4, "qunfold.methods.HDy"]], "hellingerloss (class in qunfold.losses)": [[4, "qunfold.losses.HellingerLoss"]], "histogramtransformer (class in qunfold.transformers)": [[4, "qunfold.transformers.HistogramTransformer"]], "leastsquaresloss (class in qunfold.losses)": [[4, "qunfold.losses.LeastSquaresLoss"]], "pacc (class in qunfold.methods)": [[4, "qunfold.methods.PACC"]], "quapywrapper (class in qunfold.quapy)": [[4, "qunfold.quapy.QuaPyWrapper"]], "run (class in qunfold.methods)": [[4, "qunfold.methods.RUN"]], "result (class in qunfold.methods)": [[4, "qunfold.methods.Result"]], "tikhonovregularization (class in qunfold.losses)": [[4, "qunfold.losses.TikhonovRegularization"]], "tikhonovregularized (class in qunfold.losses)": [[4, "qunfold.losses.TikhonovRegularized"]], "fit() (qunfold.methods.genericmethod method)": [[4, "qunfold.methods.GenericMethod.fit"]], "fit() (qunfold.quapy.quapywrapper method)": [[4, "qunfold.quapy.QuaPyWrapper.fit"]], "fit() (qunfold.sklearn.cvclassifier method)": [[4, "qunfold.sklearn.CVClassifier.fit"]], "fit_transform() (qunfold.transformers.classtransformer method)": [[4, "qunfold.transformers.ClassTransformer.fit_transform"]], "fit_transform() (qunfold.transformers.histogramtransformer method)": [[4, "qunfold.transformers.HistogramTransformer.fit_transform"]], "get_params() (qunfold.quapy.quapywrapper method)": [[4, "qunfold.quapy.QuaPyWrapper.get_params"]], "instantiate_loss() (in module qunfold.losses)": [[4, "qunfold.losses.instantiate_loss"]], "module": [[4, "module-qunfold"], [4, "module-qunfold.losses"], [4, "module-qunfold.methods"], [4, "module-qunfold.quapy"], [4, "module-qunfold.sklearn"], [4, "module-qunfold.transformers"], [5, "module-qunfold.experiments"], [5, "module-qunfold.experiments.lequa"], [6, "module-qunfold.tests"]], "predict() (qunfold.methods.genericmethod method)": [[4, "qunfold.methods.GenericMethod.predict"]], "predict_proba() (qunfold.sklearn.cvclassifier method)": [[4, "qunfold.sklearn.CVClassifier.predict_proba"]], "quantify() (qunfold.quapy.quapywrapper method)": [[4, "qunfold.quapy.QuaPyWrapper.quantify"]], "qunfold": [[4, "module-qunfold"]], "qunfold.losses": [[4, "module-qunfold.losses"]], "qunfold.methods": [[4, "module-qunfold.methods"]], "qunfold.quapy": [[4, "module-qunfold.quapy"]], "qunfold.sklearn": [[4, "module-qunfold.sklearn"]], "qunfold.transformers": [[4, "module-qunfold.transformers"]], "set_params() (qunfold.quapy.quapywrapper method)": [[4, "qunfold.quapy.QuaPyWrapper.set_params"]], "solve() (qunfold.methods.genericmethod method)": [[4, "qunfold.methods.GenericMethod.solve"]], "transform() (qunfold.transformers.classtransformer method)": [[4, "qunfold.transformers.ClassTransformer.transform"]], "transform() (qunfold.transformers.histogramtransformer method)": [[4, "qunfold.transformers.HistogramTransformer.transform"]], "mygridsearchq (class in qunfold.experiments.lequa)": [[5, "qunfold.experiments.lequa.MyGridSearchQ"]], "main() (in module qunfold.experiments.lequa)": [[5, "qunfold.experiments.lequa.main"]], "qunfold.experiments": [[5, "module-qunfold.experiments"]], "qunfold.experiments.lequa": [[5, "module-qunfold.experiments.lequa"]], "trial() (in module qunfold.experiments.lequa)": [[5, "qunfold.experiments.lequa.trial"]], "singlesampleprotocol (class in qunfold.tests)": [[6, "qunfold.tests.SingleSampleProtocol"]], "testcvclassifier (class in qunfold.tests)": [[6, "qunfold.tests.TestCVClassifier"]], "testhistogramtransformer (class in qunfold.tests)": [[6, "qunfold.tests.TestHistogramTransformer"]], "testmethods (class in qunfold.tests)": [[6, "qunfold.tests.TestMethods"]], "testquapywrapper (class in qunfold.tests)": [[6, "qunfold.tests.TestQuaPyWrapper"]], "generate_data() (in module qunfold.tests)": [[6, "qunfold.tests.generate_data"]], "make_problem() (in module qunfold.tests)": [[6, "qunfold.tests.make_problem"]], "qunfold.tests": [[6, "module-qunfold.tests"]], "test_methods() (qunfold.tests.testcvclassifier method)": [[6, "qunfold.tests.TestCVClassifier.test_methods"]], "test_methods() (qunfold.tests.testmethods method)": [[6, "qunfold.tests.TestMethods.test_methods"]], "test_methods() (qunfold.tests.testquapywrapper method)": [[6, "qunfold.tests.TestQuaPyWrapper.test_methods"]], "test_transformer() (qunfold.tests.testhistogramtransformer method)": [[6, "qunfold.tests.TestHistogramTransformer.test_transformer"]]}})